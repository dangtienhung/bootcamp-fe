import { HTTP_STATUS } from '../common/http-status.common.js';
import { cartService } from '../services/cart.service.js';
import { productService } from '../services/product.service.js';
import { checkUserExist } from '../services/user.service.js';

export const cartController = {
  // add to cart
  addCart: async (req, res) => {
    const body = req.body;
    const { userId, ...product } = body;

    // check user t·ªìn t·∫°i hay kh√¥ng
    const userExist = await checkUserExist(userId);
    if (!userExist) {
      return res.status(HTTP_STATUS.UNAUTHORIZED).json({
        message: 'User not found',
        success: false,
      });
    }
    // check product t·ªìn t·∫°i hay kh√¥ng
    const productExist = await productService.getProductById(product.productId);
    if (!productExist) {
      return res.status(HTTP_STATUS.BAD_REQUEST).json({
        message: 'Product not found',
        success: false,
      });
    }

    // l·∫•y gi·ªè h√†ng c·ªßa user
    const result = await cartService.getCartsByUserId(userId);
    if (!result) {
      // t·∫°o m·ªõi gi·ªè h√†ng
      const newCart = await cartService.createCart(userId, []);

      // th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
      newCart.carts.push(product);

      // t√≠nh t·ªïng ti·ªÅn
      const total =
        productExist.sale > 0
          ? product.quantity * (productExist.price - productExist.sale)
          : product.quantity * productExist.price;

      newCart.total = total;
      await newCart.save();

      return res.status(HTTP_STATUS.OK).json({
        message: 'Add to cart successfully',
        success: true,
      });
    }

    // console.log('üöÄ ~ addCart: ~ result:', result);
    // const { carts } = result;
    // console.log('üöÄ ~ addCart: ~ carts:', carts);

    // check product t·ªìn t·∫°i trong gi·ªè h√†ng hay ch∆∞a

    // n·∫øu ch∆∞a ch∆∞a t·ªìn t·∫°i th√™m m·ªõi v√†o gi·ªè h√†ng

    // n·∫øu t·ªìn t·∫°i r·ªìi th√¨ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng

    // total
  },
};
